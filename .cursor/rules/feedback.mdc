---
description: 
globs: 
alwaysApply: true
---
# Feedback and Consistency Guidelines

## Code and Documentation Alignment
- Code and Cursor rules MUST reflect each other precisely. If discrepancies exist, prioritize bringing them into alignment immediately.
- When making code suggestions, always reference relevant existing rules and patterns.
- If implementing a pattern that differs from documented rules, explicitly highlight this with a clear rationale.

## Documentation Completeness
- All significant patterns should be documented through Cursor rules - this is non-negotiable.
- When undocumented patterns are encountered, prompt for rule creation with specific examples from the codebase.
- Provide draft rule text that follows the established documentation style.

## Rule Organization and Evolution
- As the codebase grows, suggest splitting rules into more granular components when they exceed ~200 lines or cover multiple distinct concerns.
- Suggest new rule categories when patterns emerge that don't fit existing categories.
- Regularly review rule organization to ensure it remains intuitive and navigable.

## Enforcement Level
- Consider adding an explicit "enforcement level" to rules (Required, Recommended, Optional) to distinguish between critical patterns and guidelines.
- For "Required" patterns, always include validation steps or checks to ensure compliance.

## Examples and Anti-patterns
- Each rule should include concrete examples of correct implementation.
- When appropriate, include anti-patterns to clearly illustrate what to avoid.
- Where possible, explain the reasoning behind patterns to build understanding.