---
description: Import and Module Organization Patterns
globs: 
alwaysApply: false
---
# Import and Module Patterns

## Path Aliases

- Use configured path aliases for imports to avoid relative paths
- Standard aliases:
  - `@comp` - Component library
  - `@utils` - Utility functions
  - `@lib` - Common libraries
  - `@routes` - Route definitions
  - `@api` - API endpoints

## Import Order

- Group imports consistently:
  1. External packages
  2. Framework imports
  3. Utility imports
  4. Component imports
  5. Type imports
- Add empty line between groups

```typescript
// External packages
import { useState } from "preact/hooks";
import { cva } from "class-variance-authority";

// Framework imports
import type { FC } from "@kalena/framework";

// Utility imports
import { cn } from "@comp/utils/tailwind.ts";

// Component imports
import { Button } from "@comp/ui/Button.tsx";

// Type imports
import type { BaseComponentProps } from "@comp/utils/props.ts";
```

## Export Patterns

- Use named exports for components and utilities
- Avoid default exports
- Create index files for feature directories
- Re-export from index files for cleaner imports